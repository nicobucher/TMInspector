#include "store.h"
#include <QFile>
#include <QTextStream>
#include <QDateTime>
#include <QDebug>
#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;

Store::Store(QObject* parent) : QObject(parent)
{
    this->model = new QStandardItemModel();
    this->proxy_model = new TreeViewFilterProxyModel(this);
    this->proxy_model->setSourceModel(this->model);

    QTextStream(&export_file_header) << "# Log File Generated by TMInspector (Institute of Space Systems) Software" << endl;
    QTextStream(&export_file_header) << "#" << endl;
}

void
Store::exportToFile(QString filename_)
{
    ofstream fileout;
    fileout.open(filename_.toStdString().c_str(), ios::out| ios::trunc);
    if (fileout.is_open()) {
        fileout << export_file_header.toStdString();
        QDateTime now = QDateTime::currentDateTime();

        QStandardItem* print_item;
        for (int i=0; i < model->rowCount(); ++i) {
            print_item = model->item(i, 0);
            fileout << setfill(' ') << setw(5) << print_item->data(Qt::DisplayRole).toString().toStdString();
            for (int iii = 1; iii < model->columnCount(); ++iii) {
                print_item = model->item(i, iii);
                fileout << setfill(' ') << setw(30) << print_item->data(Qt::DisplayRole).toString().toStdString();
            }
            fileout << endl;
        }
        fileout << "# Generation Time: " << now.toString("ddd MMMM d yyyy").toStdString() << ", " << now.toString("hh:mm:ss").toStdString() << endl;
        fileout.flush();
        fileout.close();
    } else {
        qDebug() << "Error opening file: " << filename_;
    }
}
